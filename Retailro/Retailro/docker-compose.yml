version: '3.9'

services:
  apigateway:
    build:
      context: ./APIGateway/APIGateway

    ports:
      - "7007:443"
    volumes:
      - ./https:/https:ro
    environment:
      ASPNETCORE_Kestrel__Endpoints__Https__Url: "https://+:443"
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
      ASPNETCORE_Kestrel__Certificates__Default__Password: "DevPassword!"
      JWT_SECRET: eyJhbGciOiJIUzM4NCIsInR5cCI6IkpXVCJ9
      JWT_ISSUER: https://localhost:7007
      JWT_AUDIENCE: https://localhost:7007   

    extra_hosts:
      - "host.docker.internal:host-gateway"

    depends_on:
      - userservice
      - orderservice
      - productsservice
      - paymentservice
    networks:
      - app-network

  userservice:
    build:
      context: ./UserService
    environment:
      - ConnectionStrings__DefaultConnection=Server=userdb;Database=UsersDatabase;User=sa;Password=Str0NgPassWord;Encrypt=True;TrustServerCertificate=True
      - JwtSettings__Secret=eyJhbGciOiJIUzM4NCIsInR5cCI6IkpXVCJ9
      - JwtSettings__Issuer=https://localhost:7007
      - JwtSettings__Audience=https://localhost:7007
      - JwtSettings__ExpiryMinutes=60
    depends_on:
      - userdb
    networks:
      - app-network

  userdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Str0NgPassWord"
      ACCEPT_EULA: "Y"
    ports:
    - "1433:1433"
    networks:
      - app-network

  orderservice:
    build:
      context: ./OrderService/OrderService
    environment:
      - ConnectionStrings__DefaultConnection=Server=orderdb;Database=OrdersDatabase;User=sa;Password=Str0NgPassWord;Encrypt=True;TrustServerCertificate=True
    depends_on:
      - orderdb
      - rabbitmq
    networks:
      - app-network

  orderdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Str0NgPassWord"
      ACCEPT_EULA: "Y"
    ports:
    - "1434:1433"
    networks:
      - app-network

  productsservice:
    build:
      context: ./ProductService/ProductService
    environment:
      - ConnectionStrings__DefaultConnection=Server=productsdb;Database=ProductsDatabase;User=sa;Password=Str0NgPassWord;Encrypt=True;TrustServerCertificate=True
      - JWT_SECRET=eyJhbGciOiJIUzM4NCIsInR5cCI6IkpXVCJ9
      - JWT_ISSUER=https://localhost:7007
      - JWT_AUDIENCE=https://localhost:7007
    depends_on:
      - productsdb
      - rabbitmq
    volumes:
    - ./ProductService/wwwroot/images:/app/wwwroot/images
    networks:
      - app-network

  productsdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Str0NgPassWord"
      ACCEPT_EULA: "Y"
    ports:
    - "1435:1433"
    networks:
      - app-network

  paymentservice:
    build:
      context: ./PaymentService
    environment:
      - ConnectionStrings__DefaultConnection=Server=paymentdb;Database=PaymentsDatabase;User=sa;Password=Str0NgPassWord;Encrypt=True;TrustServerCertificate=True
      - Braintree__Environment=sandbox
      - Braintree__MerchantId=cmv32jhm9q9c297x
      - Braintree__PublicKey=7wd6hksf7xscy8q3
      - Braintree__PrivateKey=7bc9081cff4a161006e2ce6f73334b69
      - Redis__ConnectionString=redis:6379
    depends_on:
      - paymentdb
      - redis
      - rabbitmq
    networks:
      - app-network

  paymentdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Str0NgPassWord"
      ACCEPT_EULA: "Y"
    ports:
    - "1436:1433"
    networks:
      - app-network

  redis:
    image: redis:alpine
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - app-network

networks:
  app-network:
