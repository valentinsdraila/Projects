{"ast":null,"code":"const handleLogin = async e => {\n  e.preventDefault();\n  setError(''); // Clear any previous error\n\n  try {\n    const response = await fetch('http://localhost:7270/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      console.log('Login successful:', data);\n      // Handle successful login (e.g., redirect or store token)\n    } else {\n      const errorData = await response.json();\n      setError(errorData.message || 'Login failed');\n    }\n  } catch (error) {\n    setError('Network error: ' + error.message);\n  }\n};","map":{"version":3,"names":["handleLogin","e","preventDefault","setError","response","fetch","method","headers","body","JSON","stringify","username","password","ok","data","json","console","log","errorData","message","error"],"sources":["C:/Users/valen/Desktop/Disertatie/Frontend/retailro/src/components/LoginPage.js"],"sourcesContent":["const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(''); // Clear any previous error\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:7270/api/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            console.log('Login successful:', data);\r\n            // Handle successful login (e.g., redirect or store token)\r\n        } else {\r\n            const errorData = await response.json();\r\n            setError(errorData.message || 'Login failed');\r\n        }\r\n    } catch (error) {\r\n        setError('Network error: ' + error.message);\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAOC,CAAC,IAAK;EAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEd,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,QAAQ;QAAEC;MAAS,CAAC;IAC/C,CAAC,CAAC;IAEF,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACb,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;MACtC;IACJ,CAAC,MAAM;MACH,MAAMI,SAAS,GAAG,MAAMd,QAAQ,CAACW,IAAI,CAAC,CAAC;MACvCZ,QAAQ,CAACe,SAAS,CAACC,OAAO,IAAI,cAAc,CAAC;IACjD;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZjB,QAAQ,CAAC,iBAAiB,GAAGiB,KAAK,CAACD,OAAO,CAAC;EAC/C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}